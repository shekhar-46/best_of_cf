Question Link -> https://leetcode.com/problems/zero-array-transformation-ii/description/ 

Give it a try...
you will learn so many things




 <---- Solution --->



#include<bits/stdc++.h>
using namespace std;
class Solution {
public:
    int minZeroArray(vector<int>& nums, vector<vector<int>>& queries) 
    {
        auto a = nums;
        int n = a.size();
        int m = queries.size();

        int low = 0,high = m,ans = -1;
        int sweep[n + 1];
        while(low <= high)
        {
            memset(sweep, 0, sizeof(sweep));
            int mid = (low + high) / 2;
            for(int i = 0; i < mid; i++)
            {
                int l = queries[i][0];
                int r = queries[i][1];
                int val = queries[i][2];
                sweep[l] += val;
                sweep[r + 1] -= val;
            }
            for(int i = 1; i < n; i++)
            sweep[i] += sweep[i - 1];

            bool check = true;
            for(int i = 0; i < n; i++)
            {
                if(!(sweep[i] >= a[i]))
                {
                    check = false;
                    break;
                }
            }
            if(check)
            {
                ans = mid;
                high = mid - 1;
            }
            else
            low = mid + 1;
        }
        return ans;
    }
    // binary search + difference array technique
};

